View(Team_Data_2019)
Team_Data_2020 <- read.csv("~/GitHub/baseball model/Team_Data_2020.csv")
View(Team_Data_2020)
Team_Data_2021 <- read.csv("~/GitHub/baseball model/Team_Data_2021.csv")
View(Team_Data_2021)
#add season column
Team_Data_2019$Season <- 2019
Team_Data_2020$Season <- 2020
Team_Data_2021$Season <- 2021
Team_Data <- rbind(Team_Data_2019, Team_Data_2020, Team_Data_2021)
View(Team_Data)
#final model build
library(tidyverse)
library(readr)
library(randomForest)
library(lightgbm)
rF <- randomForest(R ~., data = Team_Data, ntree = 500, importance = TRUE)
View(Team_Data)
rm(Team_Data$xwOBA)
Team_Data <- subset(Team_Data, select = -c(xwOBA))
rF <- randomForest(R ~., data = Team_Data, ntree = 500, importance = TRUE)
View(rF)
rF$importance
sort(rF$importance)
rF$importance
y = colnames(Team_Data[5])
y
x =  colnames(Team_Data[4], Team_Data[6:22])
x =  colnames(Team_Data[4, 6:22])
y = Team_Data %>% select(R)
colnames(Team_Data)
colnames(TeamData)[1] <- Team
colnames(TeamData)[1] <- 'Team'
colnames(Team_Data)[1] <- 'Team'
x =  Team_Data %>%
select(c(HR, RBI:WAR ))
y_team = Team_Data %>% select(R)
x_team =  Team_Data %>%
select(c(HR, RBI:WAR ))
rF <- randomForest(y = y_team, x = x_team, data = Team_Data, ntree = 500, importance = TRUE)
View(y_team)
unique(y_team)
rF <- randomForest(y = y_team, x = x_team, data = Team_Data, ntree = 500, importance = TRUE)
unique(y_team)
rF <- randomForest(y = y_team, x = x_team, data = Team_Data, ntree = 500, importance = TRUE)
rF <- randomForest(y = y_team, x = x_team, data = Team_Data, ntree = 500, importance = TRUE)
y_team = as.integer(y_Team)
y_team = as.integer(y_team)
rF <- randomForest(y = Team_Data$R, x = x_team, data = Team_Data, ntree = 500, importance = TRUE)
View(rF)
rF$importance
x_team = x_team %>%
select(-c(RBI))
rF <- randomForest(y = Team_Data$R, x = x_team, data = Team_Data, ntree = 500, importance = TRUE)
View(rF)
rF$importance
imp <- varImpPlot(rf)
var_importance <- arrange(rf$importance, desc(importance))
var_importance <- sort(rf$importance)
rF
rF$importance
rF_imp <- rF$importance
View(rF_imp)
rf_imp$IncNodePurity
typeof(rF_imp)
rF_imp[IncNodePurity]
randomForest.ggplot.importance(rF)
varImpPlot(rF, type = 2)
Team_Data <- read.csv("~/GitHub/baseball model/Team_Data.csv")
View(Team_Data)
#random forest
x_team =  Team_Data %>%
select(c(HR, RBI:WAR ))
x_team = x_team %>%
select(-c(RBI))
rF <- randomForest(y = Team_Data$R, x = x_team, data = Team_Data, ntree = 500, importance = TRUE)
varImpPlot(rF, type = 2)
Team_Data$hit_per_run <- Team_Data$H/Team_Data$R
colnames(Team_Data[1]) <- 'Team'
View(Team_Data)
colnames(Team_Data)
colnames(Team_Data)[1] <- 'Team'
View(Team_Data)
x_team =  Team_Data %>%
select(-c(R, hit_per_run))
View(x_team)
#team data
Team_Data <- read.csv("~/itHub/baseball model/Team_Data.csv")
colnames(Team_Data)[1] <- 'Team'
Team_Data <- read.csv("~/GitHub/baseball model/Team_Data.csv")
colnames(Team_Data)[1] <- 'Team'
#variable creation
Team_Data$hit_per_run <- Team_Data$H/Team_Data$R
#random forest
x_team =  Team_Data %>%
select(-c(H, hit_per_run))
rF <- randomForest(y = Team_Data$hit_per_run, x = x_team, data = Team_Data, ntree = 500, importance = TRUE)
varImpPlot(rF, type = 2)
#team data
Team_Data <- read.csv("~/GitHub/baseball model/Team_Data.csv")
colnames(Team_Data)[1] <- 'Team'
#variable creation
Team_Data$hit_per_run <- Team_Data$H/Team_Data$R
#random forest
x_team =  Team_Data %>%
select(-c(H, hit_per_run, Team, Season))
rF <- randomForest(y = Team_Data$hit_per_run, x = x_team, data = Team_Data, ntree = 500, importance = TRUE)
varImpPlot(rF, type = 2)
View(TOR_hitting)
View(TOR_hitting)
View(TOR_pitching)
View(TOR_pitching)
View(TOR_hitting)
View(TEX_pitching)
View(TEX_hitting)
View(TEX_hitting)
View(WSN_hitting)
View(WSN_hitting)
lm_model <- lm(y = Team_Data$hit_per_run, x = x_team, data = Team_Data)
View(Team_Data)
View(Team_Data)
lm_model <- lm(y = Team_Data$hit_per_run, x = x_team, data = Team_Data)
Team_Data$hit_per_run
x_lm <- Team_Data %>%
select(c(ISO, wOBA, wRC, OBP, X1B, BB, WAR, BABIP, SLG))
x_lm <- Team_Data %>%
select(c(ISO, wOBA, wRC., OBP, X1B, BB, WAR, BABIP, SLG))
lm_model <- lm(y = Team_Data$hit_per_run, x = x_team, data = Team_Data)
Team_Data$hit_per_run <- as.numeric(Team_Data$hit_per_run)
lm_model <- lm(y = Team_Data$hit_per_run, x = x_team, data = Team_Data)
lm_model <- lm(y = Team_Data$hit_per_run, x = x_lm, data = Team_Data)
lm_model <- lm(y = Team_Data$hit_per_run, x = x_lm)
x_lm <- as.numeric(x_lm)
typeof(x_lm)
x_lm <- Team_Data %>%
select(ISO, WOBA, wRC, OBP, X1B, BB., WAR, BABIP, SLG)
#lm
x_lm <- Team_Data %>%
select(ISO, wOBA, wRC, OBP, X1B, BB., WAR, BABIP, SLG)
x_lm <- Team_Data %>%
select(ISO, wOBA, wRC., OBP, X1B, BB., WAR, BABIP, SLG)
x_lm <- as.data.frame(x_lm)
lm_model <- lm(y = Team_Data$hit_per_run, x = x_lm, data = Team_Data)
y_lm <- Team_Data$hit_per_run
x_lm <- Team_Data %>%
select(ISO, wOBA, wRC., OBP, X1B, BB., WAR, BABIP, SLG)
x_lm <- as.data.frame(x_lm)
lm_model <- lm(y = y_lm, x = x_lm, data = Team_Data)
reg_data <- as.data.frame(cbind(y_lm, x_lm))
View(reg_data)
lm_model <- lm(hit_per_run~., data = reg_data)
View(reg_data)
lm_model <- lm(y_lmit_per_run~., data = reg_data)
lm_model <- lm(y_lm~., data = reg_data)
View(lm_model)
summary(lm_model)
View(reg_data)
#team data
Team_Data <- read.csv("~/GitHub/baseball model/Team_Data.csv")
colnames(Team_Data)[1] <- 'Team'
#variable creation
Team_Data$hit_per_run <- Team_Data$H/Team_Data$R
#random forest
x_team =  Team_Data %>%
select(-c(H, hit_per_run, Team, Season))
rF <- randomForest(y = Team_Data$hit_per_run, x = x_team, data = Team_Data, ntree = 500, importance = TRUE)
varImpPlot(rF, type = 2)
lm_model <- lm(y = hit_per_run, x = c(BB_rate, ISO, wRC, wOBA, OBP, X1B, SLG, WAR, BABIP), data = reg_data)
lm_model <- lm(y = hit_per_run, x = c(BB_rate, ISO, wRC, wOBA, OBP, X1B, SLG, WAR, BABIP), data = Team_Data)
View(Team_Data)
View(Team_Data)
colnames(Team_Data)
Team_Data$BB_rate
lm_model <- lm(y = hit_per_run, x = c(ISO, wRC, wOBA, OBP, X1B, SLG, WAR, BABIP), data = Team_Data)
lm_model <- lm(y = 'hit_per_run', x = c('BB_rate', 'ISO', 'wRC', 'wOBA', 'OBP', 'X1B', 'SLG', 'WAR', 'BABIP'), data = Team_Data)
View(Team_Data)
lm_model <- lm(hit_per_run~., data = Team_Data)
View(lm_model)
summary(lm_model)
#lm
lm_df <- Team_Data %>%
select(-c(Team))
lm_model <- lm(hit_per_run~., data = lm_df)
View(lm_model)
summary(lm_model)
lm_df <- Team_Data %>%
select(-c(Team, R, H))
lm_model <- lm(hit_per_run~., data = lm_df)
View(lm_model)
summary(lm_model)
lm_df <- Team_Data %>%
select(c(ISO, BB_rate, AVG, OBP, SLG, WAR))
lm_model <- lm(hit_per_run~., data = lm_df)
lm_df <- Team_Data %>%
select(c(hit_per_run, ISO, BB_rate, AVG, OBP, SLG, WAR))
lm_model <- lm(hit_per_run~., data = lm_df)
View(lm_model)
summary(lm_model)
#lm
lm_df <- Team_Data %>%
select(c(hit_per_run, ISO, BB_rate, AVG, OBP, SLG, WAR))
lm_model <- lm(hit_per_run~., data = lm_df)
#random forest
x_team =  Team_Data %>%
select(-c(H, hit_per_run, Team, Season))
rF <- randomForest(y = Team_Data$hit_per_run, x = x_team, data = Team_Data, ntree = 500, importance = TRUE)
varImpPlot(rF, type = 2)
#final model build
library(tidyverse)
library(readr)
library(randomForest)
library(lightgbm)
#random forest
x_team =  Team_Data %>%
select(-c(H, hit_per_run, Team, Season))
rF <- randomForest(y = Team_Data$hit_per_run, x = x_team, data = Team_Data, ntree = 500, importance = TRUE)
varImpPlot(rF, type = 2)
summary(lm_df)
summary(lm_model)
lm_df <- Team_Data %>%
select(c(hit_per_run, ISO, BB_rate, AVG, OBP, SLG, WAR, wOBA, wRC, X1B, BABIP, X3B, BB, HR, AVG, X2B, K_rate, SB))
lm_model <- lm(hit_per_run~., data = lm_df)
summary(lm_model)
View(lm_df)
View(MIL_hitting)
rF
rF <- randomForest(y = Team_Data$hit_per_run, x = x_team, data = Team_Data, ntree = 500, mtry = 3, importance = TRUE)
varImpPlot(rF, type = 2)
rF
rF <- randomForest(y = Team_Data$hit_per_run, x = x_team, data = Team_Data, ntree = 500, mtry = 2, importance = TRUE)
varImpPlot(rF, type = 2)
rF
x_team =  Team_Data %>%
select(-c(H, hit_per_run, Team, Season))
rF <- randomForest(y = Team_Data$hit_per_run, x = x_team, data = Team_Data, ntree = 500, mtry = 6, importance = TRUE)
varImpPlot(rF, type = 2)
rF
lgbm_train <- lgb.Dataset(data = Team_Data, label = run_per_hit)
lgbm_train <- lgb.Dataset(data = Team_Data, label = hit_per_run)
x_team =  Team_Data %>%
select(-c(H, hit_per_run, Team, Season, R))
rF <- randomForest(y = Team_Data$hit_per_run, x = x_team, data = Team_Data, ntree = 500, mtry = 6, importance = TRUE)
varImpPlot(rF, type = 2)
rF
rF <- randomForest(y = Team_Data$hit_per_run, x = x_team, data = Team_Data, ntree = 500, mtry = 5, importance = TRUE)
varImpPlot(rF, type = 2)
rF
lm_df <- Team_Data %>%
select(c(hit_per_run, ISO, BB_rate, AVG, OBP, SLG, WAR, wOBA, wRC, X1B, BABIP, X3B, BB, HR, AVG, X2B, K_rate, SB))
lm_model <- lm(hit_per_run~., data = lm_df)
summary(lm_model)
lm_df <- Team_Data %>%
select(c(R, ISO, BB_rate, AVG, OBP, SLG, WAR, wOBA, X1B, BABIP, X3B, BB, HR, AVG, X2B, K_rate, SB))
lm_model <- lm(R~., data = lm_df)
summary(lm_model)
#lm
lm_df <- Team_Data %>%
select(c(R, WAR, wOBA, X3B, HR, X2B, SB, X1B))
lm_model <- lm(R~., data = lm_df)
summary(lm_model)
lm_df <- Team_Data %>%
select(c(hit_per_run, WAR, wOBA, X3B, HR, X2B, SB, X1B))
lm_model <- lm(R~., data = lm_df)
#lm
lm_df <- Team_Data %>%
select(c(hit_per_run, WAR, wOBA, X3B, HR, X2B, SB, X1B))
lm_model <- lm(hit_per_run~., data = lm_df)
summary(lm_model)
install.packages("olsrr")
library(olsrr)
x_team =  Team_Data %>%
select(-c(hit_per_run, Team, Season, R))
rF <- randomForest(y = Team_Data$hit_per_run, x = x_team, data = Team_Data, ntree = 500, mtry = 5, importance = TRUE)
varImpPlot(rF, type = 2)
rF
rF <- randomForest(y = Team_Data$hit_per_run, x = x_team, data = Team_Data, ntree = 500, mtry = 5, importance = TRUE)
varImpPlot(rF, type = 2)
rF
lm_df <- Team_Data %>%
select(-c(H, Team, Season, R))
View(lm_df)
lm_model <- lm(hit_per_run~., data = lm_df)
step <- ols_step_all_possible(lm_model)
lm_df <- Team_Data %>%
select(-c(H, Team, Season, R, BB, wOBA, wRC))
lm_model <- lm(hit_per_run~., data = lm_df)
step <- ols_step_all_possible(lm_model)
step
tail(step)
plot(step)
step$adjr
step
step$predictors
sort(step$adjr)
output <- as.data.frame(cbind(step$predictors, step$adjr))
View(output)
colnames(output) <- c('Predictors', 'Adj_r2')
View(output)
sort(output$Adj_r2, decreasing = TRUE)
output <- sort(output[-Adj_r2])
output <- output[order(-Adj_r2)])
output <- output[order(-Adj_r2)]
View(output)
output <- output[order(-Adj_r2),]
View(output)
View(step)
lm_df_2 <- Team_Data %>%
select (c(hit_per_run, X1B, SB, BB_rate, ISO, BABIP, WAR))
lm_model_2 <- lm(hit_per_run~., data = lm_df_2)
summary(lm_model_2)
lm_model_2$coefficients
View(MIA_hitting)
View(Team_Data)
Team_Data$exp_hit_per_run <- Team_Data %>%
mutate(exp_hit_per_run = 2.276 + 0.0002483 * X1B - 0.00006842 * SB - 4.580 * BB_rate - 2.668 * ISO + 1.107 * BABIP - .0050077 * WAR)
View(Team_Data)
#variable creation
Team_Data$hit_per_run <- Team_Data$H/Team_Data$R
#team data
Team_Data <- read.csv("~/GitHub/baseball model/Team_Data.csv")
colnames(Team_Data)[1] <- 'Team'
#variable creation
Team_Data$hit_per_run <- Team_Data$H/Team_Data$R
#random forest
x_team =  Team_Data %>%
select(-c(hit_per_run, Team, Season, R))
rF <- randomForest(y = Team_Data$hit_per_run, x = x_team, data = Team_Data, ntree = 500, mtry = 5, importance = TRUE)
varImpPlot(rF, type = 2)
rF
#lm
library(olsrr)
lm_df <- Team_Data %>%
select(-c(H, Team, Season, R, BB, wOBA, wRC, WAR, X1B, X2B, X3B))
lm_model <- lm(hit_per_run~., data = lm_df)
step <- ols_step_all_possible(lm_model)
View(step)
View(Team_Data)
Team_Data <- Team_Data %>%
mutate(hit_per_run = H/R,
HR_rate = HR/AB)
Team_Data$BB/BB_rate
Team_Data$BB/Team_Data$BB_rate
Team_Data <- Team_Data %>%
mutate(hit_per_run = H/R,
HR_rate = HR/(BB/BB_rate))
#random forest
x_team =  Team_Data %>%
select(-c(hit_per_run, Team, Season, R))
rF <- randomForest(y = Team_Data$hit_per_run, x = x_team, data = Team_Data, ntree = 500, mtry = 5, importance = TRUE)
varImpPlot(rF, type = 2)
rF
#lm
library(olsrr)
lm_df <- Team_Data %>%
select(-c(H, Team, Season, R, BB, wOBA, wRC, WAR, X1B, X2B, X3B))
lm_model <- lm(hit_per_run~., data = lm_df)
step <- ols_step_all_possible(lm_model)
View(step)
rF
#random forest
x_team =  Team_Data %>%
select(-c(hit_per_run, Team, Season, R, HR))
rF <- randomForest(y = Team_Data$hit_per_run, x = x_team, data = Team_Data, ntree = 500, mtry = 5, importance = TRUE)
varImpPlot(rF, type = 2)
rF
#lm
library(olsrr)
lm_df <- Team_Data %>%
select(-c(H, Team, Season, R, BB, wOBA, wRC, WAR, X1B, X2B, X3B, HR))
lm_model <- lm(hit_per_run~., data = lm_df)
step <- ols_step_all_possible(lm_model)
View(step)
lm_df_2 <- Team_Data %>%
select (c(hit_per_run, SB, BB_rate, K_rate, ISO, BABIP, AVG, OBP, SLG, HR_rate))
lm_model_2 <- lm(hit_per_run~., data = lm_df_2)
summary(lm_model_2)
coef <- lm_model_2$coefficients
lm_df_2 <- Team_Data %>%
select (c(hit_per_run, BB_rate, ISO, BABIP))
lm_model_2 <- lm(hit_per_run~., data = lm_df_2)
summary(lm_model_2)
coef <- lm_model_2$coefficients
lm_df_2 <- Team_Data %>%
select (c(R, BB_rate, ISO, BABIP))
lm_model_2 <- lm(R~., data = lm_df_2)
summary(lm_model_2)
lm_df_2 <- Team_Data %>%
select (c(hit_per_run, BB_rate, ISO, BABIP))
lm_model_2 <- lm(hit_per_run~., data = lm_df_2)
summary(lm_model_2)
coef <- lm_model_2$coefficients
coef
coef[1]
coef[2]
Team_Data$exp_hit_per_run <- Team_Data %>%
mutate(exp_hit_per_run = coef[1] + (coef[2] * BB_rate) + (coef[3] * ISO) + (coef[4] *BABIP))
Team_Data$exp_hit_per_run <- Team_Data %>%
mutate(exp_hit_per_run = coef[1] + (coef[2] * BB_rate) + (coef[3] * ISO) + (coef[4] *BABIP)
exp_runs = (hit_per_run - exp_hit_per_run) * H
run_diff = R - exp_runs)
Team_Data$exp_hit_per_run <- Team_Data %>%
mutate(exp_hit_per_run = coef[1] + (coef[2] * BB_rate) + (coef[3] * ISO) + (coef[4] *BABIP),
exp_runs = (hit_per_run - exp_hit_per_run) * H,
run_diff = R - exp_runs)
View(Team_Data)
#team data
Team_Data <- read.csv("~/GitHub/baseball model/Team_Data.csv")
colnames(Team_Data)[1] <- 'Team'
#variable creation
Team_Data <- Team_Data %>%
mutate(hit_per_run = H/R,
HR_rate = HR/(BB/BB_rate))
#lm
library(olsrr)
lm_df <- Team_Data %>%
select(-c(H, Team, Season, R, BB, wOBA, wRC, WAR, X1B, X2B, X3B, HR))
lm_model <- lm(hit_per_run~., data = lm_df)
step <- ols_step_all_possible(lm_model)
output <- as.data.frame(cbind(step$predictors, step$adjr))
colnames(output) <- c('Predictors', 'Adj_r2')
output <- output[order(-Adj_r2),]
summary(lm_model)
lm_df_2 <- Team_Data %>%
select (c(hit_per_run, BB_rate, ISO, BABIP))
lm_model_2 <- lm(hit_per_run~., data = lm_df_2)
summary(lm_model_2)
coef <- lm_model_2$coefficients
#hit_per_run = 2.5708 - 6.6440 * BB_rate - 3.2686 * ISO + 1.2421 * BABIP
Team_Data$exp_hit_per_run <- Team_Data %>%
mutate(exp_hit_per_run = coef[1] + (coef[2] * BB_rate) + (coef[3] * ISO) + (coef[4] *BABIP),
exp_runs = (hit_per_run - exp_hit_per_run) * H,
run_diff = R - exp_runs)
View(Team_Data)
#team data
Team_Data <- read.csv("~/GitHub/baseball model/Team_Data.csv")
colnames(Team_Data)[1] <- 'Team'
#variable creation
Team_Data <- Team_Data %>%
mutate(hit_per_run = H/R,
HR_rate = HR/(BB/BB_rate))
#lm
library(olsrr)
lm_df <- Team_Data %>%
select(-c(H, Team, Season, R, BB, wOBA, wRC, WAR, X1B, X2B, X3B, HR))
lm_model <- lm(hit_per_run~., data = lm_df)
step <- ols_step_all_possible(lm_model)
output <- as.data.frame(cbind(step$predictors, step$adjr))
colnames(output) <- c('Predictors', 'Adj_r2')
output <- output[order(-Adj_r2),]
summary(lm_model)
lm_df_2 <- Team_Data %>%
select (c(hit_per_run, BB_rate, ISO, BABIP))
lm_model_2 <- lm(hit_per_run~., data = lm_df_2)
summary(lm_model_2)
coef <- lm_model_2$coefficients
#hit_per_run = 2.5708 - 6.6440 * BB_rate - 3.2686 * ISO + 1.2421 * BABIP
Team_Data <- Team_Data %>%
mutate(exp_hit_per_run = coef[1] + (coef[2] * BB_rate) + (coef[3] * ISO) + (coef[4] *BABIP),
exp_runs = (hit_per_run - exp_hit_per_run) * H,
run_diff = R - exp_runs)
View(Team_Data)
Team_Data <- Team_Data %>%
mutate(exp_hit_per_run = coef[1] + (coef[2] * BB_rate) + (coef[3] * ISO) + (coef[4] *BABIP),
exp_runs = exp_hit_per_run * H,
run_diff = R - exp_runs)
View(Team_Data)
Team_Data <- Team_Data %>%
mutate(exp_hit_per_run = coef[1] + (coef[2] * BB_rate) + (coef[3] * ISO) + (coef[4] *BABIP),
exp_runs = H /exp_hit_per_run,
run_diff = R - exp_runs)
View(Team_Data)
View(Team_Data)
Team_Data_2021 <- Team_Data[Team_Data$Season == 2021]
Team_Data_2021 <- Team_Data[Team_Data$Season == '2021']
Team_Data$Season
typeof(Team_Data$Season)
View(Team_Data)
Team_Data_2021 <- Team_Data %>%
select(Season == 2021)
Team_Data$Season
setwd(C:\Users\ericp\OneDrive\Documents\GitHub\baseball model\hitting teams)
setwd('C:\Users\ericp\OneDrive\Documents\GitHub\baseball model\hitting teams')
setwd('c:\Users\ericp\OneDrive\Documents\GitHub\baseball model\hitting teams')
setwd('C:\\Users\\ericp\\OneDrive\\Documents\\GitHub\\baseball model\\hitting teams')
hitting <-
list.files(pattern = "*.csv") %>%
map_df(~read_csv(.))
hitting <-
list.files(pattern = "*.csv") %>%
map_df(~fread(.))
library(data.table)
hitting <-
list.files(pattern = "*.csv") %>%
map_df(~fread(.))
temp = list.files(pattern="*.csv")
myfiles = lapply(temp, read.delim)
View(myfiles)
temp
#hitting data
temp <- list.files(pattern="*.csv")
hitting <- lapply(temp, read.delim)
hitting[1]
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
View(ARI_hitting.csv)
#pitching data
setwd('C:\\Users\\ericp\\OneDrive\\Documents\\GitHub\\baseball model\\pitching teams')
#pitching data
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
View(TBR_pitching.csv)
View(TBR_hitting.csv)
